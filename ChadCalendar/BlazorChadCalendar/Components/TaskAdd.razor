@using BlazorChadCalendar.Data.Services 
@inject TaskService taskService

<div class="form-group">
    <label>Название задачи</label>
    <input type="text" placeholder="" @bind="task.Name">
    <span asp-validation-for="Name"></span>
</div>
<div class="form-group">
    <label>Время на задачу</label>
    <input type="time" @bind="tempDT" min="0">
    <span asp-validation-for="task.TimeTakes"></span>
</div>
<div class="form-group">
    <label>Описание</label>
    <textarea class="form-control" type="text" placeholder="" @bind="task.Description"></textarea>
</div>
<div class="form-group">
    <label>Дедлайн</label>
    <input type="datetime-local" @bind="task.Deadline" />
</div>
<div class="form-group">
    <label>Выберите проект для задачи</label>
    <select @bind="task.Project">
        @foreach (var proj in userProjects)
        {
            <option value="@proj">@proj.Name</option>
        }
    </select>
</div>
<div class="form-group">
    <input type="checkbox" asp-for="AllowedToDistribute"><label>Задачу можно автоматически распределить</label><br>
</div>
<div class="form-group">
    <label>После какой задачи расположить</label>
    <select asp-for="Predecessor.Id">
        <option value="@null">После любой</option>
        @if (ViewBag.TasksOfProject != null)
        {
            foreach (var task in ViewBag.TasksOfProject)
            {
                <option value="@task.Id">@task.Name</option>
            }
        }
    </select>
</div>
<div class="form-group">
    <label>Максимум в день</label>
    <input class="form-control" type="number" placeholder="" @bind="task.MaxPerDay" min="0">
</div>
<div class="form-group">
    <label>Частота</label>
    <select @bind="task.Frequency">
        <option disabled>Частота</option>
        <option>Никогда</option>
        <option>Каждый день</option>
        <option>Каждую неделю</option>
        <option>Каждый месяц</option>
    </select>
</div>
<div class="form-group">
    @if (isValidationError)
    {
        <label>Проверьте правильность заполнения полей</label>
    }
</div>
<button type="submit" class="btn btn-primary">Готово</button>



@code {
    Data.Task task = new Data.Task();
    DateTime tempDT;
    List<Data.Project> userProjects = taskService.GetTasks(new Data.User());
    bool isValidationError = false;
    void addTask()
    {
        if (tempDT != null)
        {
            task.TimeTakes = tempDT.TimeOfDay;
        }
    }
}
