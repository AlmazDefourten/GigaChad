@using Task = BlazorChadCalendar.Data.Task
<h3>Task</h3>

<div class row="row">
    <table class="table table-striped" >
        <thead class="thead-light">
        <tr>
            
        </tr>
        </thead>
        <tbody>
        @foreach (var item in ListTask)
        {
            <tr>
                <div class="form-check" >
                  <input class="form-check-input" type="checkbox" value="" id="@(item.IsCompleted != null && (bool)item.IsCompleted ? "flexCheckChecked" : "flexCheckDefault")" checked=@(item.IsCompleted != null && (bool)item.IsCompleted ? true : false) >
                  <label class="form-check-label" for="@(item.IsCompleted != null && (bool)item.IsCompleted ? "flexCheckChecked" : "flexCheckDefault")">
                    @item.Name
                  </label>
                </div>
            </tr>
            
        }
        </tbody> 
    </table>
</div>

@code {
    private List<Task> ListTask { get; set; }

    protected async override System.Threading.Tasks.Task OnInitializedAsync()
    {
        ListTask = new List<Task>()
        {
            new Task()
            {
                Name = "Помыть кота",
                IsCompleted = false,
                Description = "Начисто",
                MaxPerDay = 1,

            },
            new Task()
            {
                Name = "Сделать домашку",
                IsCompleted = true,
                Description = "по матану",
                MaxPerDay = 1,

            },
            new Task()
            {
                Name = "созвон по проекту",
                IsCompleted = false,
                Description = "барс",
                MaxPerDay = 1,

            }

        };
    }

}