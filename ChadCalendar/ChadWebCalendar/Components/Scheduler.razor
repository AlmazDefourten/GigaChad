@using ChadWebCalendar.Data
@inject DialogService DialogService

<RadzenScheduler @ref=@scheduler style="height: 800px;" TItem="Appointment" Data=@appointments StartProperty="StartEndTime.Start" EndProperty="StartEndTime.End"
                 TextProperty="Text" SelectedIndex="1"
                 SlotSelect=@OnSlotSelect AppointmentSelect=@OnAppointmentSelect>
    <RadzenDayView StartTime=StartTime EndTime=EndTime/>
    <RadzenWeekView StartTime=StartTime EndTime=EndTime />
    <RadzenMonthView />
</RadzenScheduler>


@code {
    private TimeSpan StartTime = new TimeSpan(6, 0, 0);
    private TimeSpan EndTime = new TimeSpan(29, 59, 59);
    public RadzenScheduler<Appointment> scheduler;
    ApplicationContext db = new ApplicationContext();

    [CascadingParameter] private Task<AuthenticationState> authenticationState { get; set; }

    public IEnumerable<Data.Event> GetEvents()
    {
        return db.Events.Where(e => e != null && e.User.Login == @authenticationState.Result.User.Identity.Name);
    }

    List<Appointment> appointments = new();

    protected override void OnInitialized()
    {
        foreach (var item in GetEvents())
        {
            Appointment appointment = new Appointment();
            appointment.Text = item.Name;
            appointment.Description = item.Description;
            appointment.Frequency = item.Frequency;
            appointment.StartEndTime.Start = item.StartsAt;
            appointment.StartEndTime.End = item.FinishesAt;
            appointment.RemindNMinutesBefore = item.RemindNMinutesBefore;
            appointment.Id = item.Id;
            appointment.Accessed = item.Accessed;
            appointments.Add(appointment);
        }
    }

    async System.Threading.Tasks.Task OnSlotSelect(SchedulerSlotSelectEventArgs args)
    {

        Appointment data = await DialogService.OpenAsync<AddAppointmentPage>("Добавить событие",
            new Dictionary<string, object> { { "Start", args.Start }, { "End", args.End } });

        if (data != null)
        {
            appointments.Add(data);
            await scheduler.Reload();
        }
    }

    async System.Threading.Tasks.Task OnAppointmentSelect(SchedulerAppointmentSelectEventArgs<Appointment> args)
    {

        await DialogService.OpenAsync<EditAppointmentPage>("Изменить событие", new Dictionary<string, object> { { "Appointment", args.Data } });

        await scheduler.Reload();
    }
}