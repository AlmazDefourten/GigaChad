@inject Data.Services.TaskService taskService
@inject NavigationManager NavigationManager
@using ChadWebCalendar.Components.Tasks
@attribute [Authorize]
@using AntDesign; 

<div class="list-group" style="height: 800px; width: 100%; overflow: auto; font-size: 30px; word-wrap: break-word ">
    @foreach (var task in taskService.GetTasks(user))
    {
        <button type="button" class="list-group-item list-group-item-success btn btn-light">
            <span class="custom-checkbox">
                <input class="form-check-input" type="checkbox">
            </span>
            @task.Name
            <Button OnClick="@(()=>{ visibleEditTask = true; taskId = task.Id; })">
                &#9881;
            </Button>
        </button>
    }
    <Modal Title="Изменить таску"
           DestroyOnClose="@destroyModal"
           Visible="@visibleEditTask"
           OnOk="(e)=>{visibleEditTask = false; taskId = null; destroyModal = true; }"
           OnCancel="(e)=>{visibleEditTask = false; taskId = null; destroyModal = true; }">
        <TaskEdit taskId="@taskId"></TaskEdit>
    </Modal>

</div>

@code {
    Data.User user;
    [CascadingParameter] private Task<AuthenticationState> authenticationState { get; set; }
    protected override async System.Threading.Tasks.Task OnInitializedAsync()
    {
        user = taskService.GetUser(authenticationState.Result.User.Identity.Name);
    }

    public int? taskId { get; set; }

    bool destroyModal = false;

    bool visibleEditTask = false;
}