@page "/"
<head>
    <title>showme</title>
</head>

@using ChadWebCalendar.Components.Events
@using ChadWebCalendar.Components.Tasks
@using ChadWebCalendar.Components
@using ChadWebCalendar.Components.Projects
@using ChadWebCalendar.Pages
@using ChadWebCalendar.Data.Models
@using ChadWebCalendar.Data.Services
@using AntDesign;
@using ChadWebCalendar.Data
@using ButtonType = AntDesign.ButtonType
@inject IAccountService _accountService
@inject NavigationManager NavigationManager
@inject IToastService toastService
@inject IJSRuntime JSRuntime
@inject DialogService DialogService

<div>
    <AuthorizeView>
        <Authorized>
            <div class="navmenu">
                <NavigationMenu></NavigationMenu>
            </div>
            <div class="main_container">
                <div class="projectlist">
                    <ProjectList GetProject="GetProjectId" />
                </div>
                <div class="tasklist">
                    <div class="row d-md-table-row">
                        <Button Type="@ButtonType.Default" OnClick="Distribute">👩‍💼</Button>
                        @if (projName != null)
                        {
                            <Button OnClick="@(() => { visibleEditProject = true; })">
                                @projName
                            </Button>
                        }
                        else
                        {
                            <Button Type="@ButtonType.Default">Выберите проект</Button>
                        }
                        <Modal Title="Изменить проект"
                               Visible="@visibleEditProject"
                               OnOk="(e)=>{visibleEditProject = false;}"
                               OnCancel="(e)=>{visibleEditProject = false;}">
                            <ProjectEdit projectId="projId" />
                        </Modal>
                        <Button OnClick="CreateTaskPage">
                            +
                        </Button>
                    </div>
                    <TaskList projectId="@projId" />
                </div>
                <div class="scheduler">
                    <Scheduler></Scheduler>
                </div>
            </div>
            <div>
            </div>
        </Authorized>
        <NotAuthorized>
            <LogIn />
        </NotAuthorized>
    </AuthorizeView>
</div>

@*<TableListTasks />*@
@*<GetListTask />*@

@code{

    [CascadingParameter]
    private Task<AuthenticationState> authenticationState { get; set; }
    private List<ChadWebCalendar.Data.Task> Tasks = new List<ChadWebCalendar.Data.Task>();
    private IList<Claim> userClaim = new List<Claim>();
    string _title;
    private LoginModel model = new LoginModel();

    NotificationsWorker notificationWorker = new NotificationsWorker();
    protected override async System.Threading.Tasks.Task OnInitializedAsync()
    {
        _title = DateTime.Now.ToString();
        if (!NotificationsWorker.IsStarted && authenticationState.Result.User.Identity.Name != null)
        {
            NotificationsWorker.Username = authenticationState.Result.User.Identity.Name;
            notificationWorker.Start();
            NotificationsWorker.NotificationReadyToShow += showNotification;
            NotificationsWorker.IsStarted = true;
        }
    }

    private void Distribute()
    {

        TaskDistributor.Distribute((int)projId);
        NavigationManager.NavigateTo("/", true);
    }

    private void showNotification()
    {
        toastService.ShowInfo($"{NotificationsWorker.TypeOfNotification}");
        JSRuntime.InvokeVoidAsync("setTitle", "You have notification");
    }

    private async void CreateTaskPage()
    {
        await DialogService.OpenAsync<TaskAdd>("Добавить задачу");
        notificationWorker.Stop();
        await _accountService.LogoutAsync();
    }

    private void GetProjectId(Project pr)
    {
        projId = pr.Id;
        projName = pr.Name;
    }
    bool visibleEvent = false;
    bool visibleProject = false;
    bool visibleEditProject = false;
    public int? projId;
    public string? projName;
}